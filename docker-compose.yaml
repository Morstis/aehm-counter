version: "3.6"
services:
  traefik:
    image: "traefik:v2.5"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.certResolver=le"
      # - '--entrypoints.http.http.redirections.entrypoint.to=https'
      # - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      # - '--certificatesresolvers.le.acme.tlschallenge=true'
      # - '--certificatesresolvers.le.acme.email=${LETSENCRYPT_MAIL}'
      # - '--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json'
    ports:
      - "443:443"
      - "80:80"
      - "9090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./letsencrypt:/letsencrypt
  nginx:
    image: nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${FRONTEND}`) && PathPrefix(`/`)"
    volumes:
      - ${HTML_ROOT:-./html}:/usr/share/nginx/html
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
  postgres:
    image: postgres
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretpgpassword}
    ports:
      - "5432:5432"
  graphql-engine:
    image: hasura/graphql-engine:latest
    depends_on:
      - "postgres"
    restart: always
    expose:
      - 8080
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-secretpgpassword}@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-secretHasuraPassword}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      HASURA_GRAPHQL_LOG_LEVEL: warn
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hasura.rule=Host(`${BACKEND}`) && PathPrefix(`/`)"
